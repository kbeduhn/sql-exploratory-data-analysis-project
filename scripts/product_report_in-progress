/* 
============================================================================
Product Report
============================================================================
Purpose:
	- This report consolidates key product metrics and behaviors.

Highlights:
	1. Gathers essential fields such as product name, category, subcategory, and cost.
	2. Segments products by revenue to identify High Performers, Mid-Range Performers, and Low Performers.
	3. Aggregates product-level metrics:
		- total orders
		- total sales
		- total quantity sold
		- total customers (unique)
		- lifespan
	4. Calculates valuable KPIs:
		- recency (months since last sale)
		- average order revenue (AOR)
		- average monthly revenue
============================================================================
*/
WITH base_query AS (
/*-------------------------------------------------------------------------- 
1) Base Query: Retrieves core columns from the tables. 
--------------------------------------------------------------------------*/
SELECT 
	s.order_number,
	s.order_date,
	s.sales_amount,
	s.quantity,
	p.product_key,
	p.product_name,
	p.category,
	p.subcategory,
	p.cost,
	c.customer_key
FROM gold.fact_sales s 
LEFT JOIN gold.dim_products p
ON s.product_key = p.product_key 
LEFT JOIN gold.dim_customers c
ON s.customer_key = c.customer_key
WHERE order_date IS NOT NULL
)
, product_segmentation AS (
/*---------------------------------------------------------------------------------------------------------------------------------------------- 
2. Product Segmentation: Identifies High Performers, Mid-Range Performers, and Low Performers.
3. Aggegrations for Product-Level Metrics, including total orders, total sales, total quantity sold, total customers (unique), lifespan (in months)
----------------------------------------------------------------------------------------------------------------------------------------------*/
SELECT
	COUNT(DISTINCT order_number) AS total_orders,
	order_date,
	SUM(sales_amount) AS total_sales,
	CASE WHEN sales_amount <= 1000 THEN 'Low Performer'
		WHEN sales_amount between 1000 and 2000 THEN 'Mid-Range Performer'
	ELSE 'High Performer'
	END AS product_sales,
	SUM(quantity) AS total_quantity,
	product_name,
	category,
	subcategory,
	cost,
	COUNT(DISTINCT customer_key) As total_customers,
	DATEDIFF(month, MIN(order_date), MAX(order_date)) AS lifespan
FROM base_query 
GROUP BY
	order_date,
	sales_amount,
	product_name,
	category,
	subcategory,
	cost
)
/*---------------------------------------------------------------------------------------------------------------------------------------------- 
4.Calculate Valuable KPIs
----------------------------------------------------------------------------------------------------------------------------------------------*/
SELECT
	total_orders,
	total_sales,
	product_sales,
	total_quantity,
	product_name,
	category,
	subcategory,
	cost,
	total_customers,
	lifespan,
	DATEDIFF (month, MAX(order_date), GETDATE()) AS recency,
	-- Compute average order revenue (AOR)
	CASE WHEN total_orders = 0 THEN 0
		ELSE total_sales / total_orders
	END AS avg_order_revenue,
	-- Compute average monthly revenue
	CASE WHEN lifespan = 0 THEN total_sales	
		ELSE total_sales / lifespan
	END AS avg_monthly_revenue
FROM product_segmentation
GROUP BY 
	total_orders, 
	total_sales,
	product_sales,
	total_quantity,
	product_name,
	category,
	subcategory,
	cost,
	total_customers,
	lifespan
